openapi: 3.0.3
info:
  title: Identity Provider API
  description: This API set implements identity provider methods
    including searching for persons and creating principals.
  contact:
    name: Chandi Cumaranatunge
  version: 0.9.0

servers:
  - url: https://mocks.idm.asu.edu/{basePath}/{version}
    description: Mock server for testing
    variables:
      basePath:
        default: api
      version:
        default: v1
        description: API version

paths:
  /person/search:
    post:
      summary: Person search and return principal information or create new principal
      description: |
        A search match is performed to determine if the Principal already exists. 
        If a match is found (100% assurance in search match), the existing Principal is returned. 
        If no match is not found (0% search match), a new Principal is created and returned.
        If manual identity resolution is required, the request is queued for review.

        If the search match or identity creation is taking too long, the request will return with 
        a 202 Accepted status code. A corresponding ``reason`` object will be included in the
        response payload to the caller.
      tags:
        - Person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonSearchRequest"

      responses:
        "200":
          description: The Principal was created or matched.
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/PersonSearchSuccessResponse"
            application/json:
              schema:
                $ref: "#/components/schemas/PersonSearchSuccessResponse"
        "202":
          description: |
            The person search request is accepted but processing is taking to long or was 
            deferred for manual identity resolution.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonSearchDeferredResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/PersonSearchDeferredResponse"
        "400":
          description: Bad request. Invalid input or missing required fields.
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Error"
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    PersonSearchRequest:
      type: object
      required:
        - firstName
        - lastName
        - email
        - dob
        - clientContext
      additionalProperties: true
      properties:
        firstName:
          type: string
        lastName:
          description: |
            The last name of the Principal. Can be a single string or an array of strings
            representing current and other last names used previously. Can be a null value.
          oneOf:
            - type: string
              nullable: true
            - type: array
              items:
                type: string
        email:
          type: string
          format: email
        dob:
          type: string
          format: date
        ssn:
          type: string
          pattern: '^\d{9}$'
          description: The Social Security Number of the Principal (no dashes).
        clientContext:
          $ref: "#/components/schemas/ClientContext"

    PersonSearchSuccessResponse:
      type: object
      required:
        - principal
        - clientContext
        - reason
      properties:
        principal:
          $ref: "#/components/schemas/Principal"
        clientContext:
          $ref: "#/components/schemas/ClientContext"
        reason:
          $ref: "#/components/schemas/ResponseReason"

    Principal:
      type: object
      required:
        - name
        - emplId
        - asuriteId
        - email
        - campusId
      properties:
        firstName:
          type: string
        lastName:
          type: string
        emplId:
          type: string
          pattern: '^\d{10}$'
        asuriteId:
          type: string
          description: The ASURITE ID that was issued or matched.
        email:
          type: string
          format: email
        campusId:
          type: string
          description: The Campus ID.

    PersonSearchDeferredResponse:
      type: object
      required:
        - customSearchContext
        - clientContext
        - reason
      properties:
        clientContext:
          $ref: "#/components/schemas/ClientContext"
        reason:
          $ref: "#/components/schemas/ResponseReason"

    ClientContext:
      type: object
      description: |
        The client context is used to identify the client application making the call.
        In addition to the three required fields, the client context can contain any
        number of additional fields that are relevant to the client application.
      required:
        - clientId
        - personId
        - requestId
      additionalProperties: true
      properties:
        clientId:
          type: string
          example: edu.asu.workday.hcm
          description:
            The unique namespaced identifying the client application making the call.
            This is a unique ID assigned by the Identity Provider to the client application.
        personId:
          type: string
          example: 39d423a0-6858-4d01-b1f3-9d2ef09b7161
          description:
            The unique ID identifying the applicant in the client application (e.g. Workday ID).
            This value is not used in the search logic.
        requestId:
          type: string
          example: 4038f873-a636-48bb-9ff6-24c44157cbdd
          description:
            The unique ID identifying the business process or component in the client
            application making the call (e.g. Workday Business Process ID).
            This value is not used in the search logic.

    ResponseReason:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - "NEW"
            - "MATCH"
            - "DEFERRED"
        message:
          type: string
          description: A human-readable message describing the reason for the response.
          enum:
            - "New Principal created"
            - "Matched existing Principal"
            - "Queued for manual resolution"

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: The error code.
        message:
          type: string
          description: A human-readable error message.
